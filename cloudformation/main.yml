AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Astro + Ract S3 deployment pipeline using CodePipeline and CodeBuild.

Parameters:
  GitHubConnectionArn:
    Type: String
    Description: CodeStar Connections Connection ARN 
  GitHubRepo:
    Type: String
    Description: GitHub repository (owner/repo)
  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub branch name to deploy
  CloudFrontFunctionArn:
    Type: String
    Default: ""
    Description: CloudFront Function ARN for routing (optional)

Conditions:
  HasCloudFrontFunction: !Not [!Equals [!Ref CloudFrontFunctionArn, ""]]

Resources:
  # パイプラインのアーティファクト置き場バケット
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  # 静的サイトホスティング用バケット
  SiteBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  # CloudFront Origin Access Control
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${AWS::StackName}-OAC"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        PriceClass: PriceClass_100  # 安価なエッジロケーションのみ
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt SiteBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized
          Compress: true
          FunctionAssociations: !If
            - HasCloudFrontFunction
            - - EventType: viewer-request
                FunctionARN: !Ref CloudFrontFunctionArn
            - !Ref "AWS::NoValue"
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html

  # S3バケットポリシー（CloudFrontからのアクセスのみ許可）
  SiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontServicePrincipalReadOnly
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub '${SiteBucket.Arn}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  # CodeBuild 用 IAM Role
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # CloudWatch Logs（ビルドログ出力）
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              # パイプラインアーティファクトバケットからの読み取り
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:
                  - !Sub '${PipelineArtifactBucket.Arn}/*'
              # S3 への同期
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:ListBucket
                  - s3:DeleteObject
                Resource:
                  - !GetAtt SiteBucket.Arn
                  - !Sub '${SiteBucket.Arn}/*'
              # CloudFront キャッシュ無効化
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource: "*"

  # CodeBuild プロジェクト (Astro ビルド＆デプロイ)
  AstroBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: AstroBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref SiteBucket
          - Name: CLOUDFRONT_DISTRIBUTION_ID
            Value: !Ref CloudFrontDistribution
      Source:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: DISABLED
      TimeoutInMinutes: 30

  # CodePipeline 用 IAM Role
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # GitHub (CodeStar Connections) からのソース取得
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                  - codestar-connections:CreateConnection
                  - codestar-connections:DeleteConnection
                  - codestar-connections:UseConnection
                  - codestar-connections:GetConnection
                  - codestar-connections:ListConnections
                  - codestar-connections:TagResource
                  - codestar-connections:ListTagsForResource
                  - codestar-connections:UntagResource
                Resource: "*"
              # アーティファクトバケットへの読み書き
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:GetBucketVersioning
                Resource:
                  - !GetAtt PipelineArtifactBucket.Arn
                  - !Sub '${PipelineArtifactBucket.Arn}/*'
              # CodeBuild の起動
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codebuild:BatchGetProjects
                  - codebuild:ListBuildsForProject
                Resource: !GetAtt AstroBuildProject.Arn

  # CodePipeline 
  AstroPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: Astro-CI-CD-Pipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Ref GitHubRepo
                BranchName: !Ref GitHubBranch
        - Name: Build
          Actions:
            - Name: Build_And_Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref AstroBuildProject

Outputs:
  PipelineName:
    Description: CodePipeline 名
    Value: !Ref AstroPipeline
  SiteBucketName:
    Description: 静的サイトをホスティングする S3 バケット名
    Value: !Ref SiteBucket
  CloudFrontDistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref CloudFrontDistribution
  CloudFrontDomainName:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt CloudFrontDistribution.DomainName
  SiteURL:
    Description: CloudFront URL
    Value: !Sub 'https://${CloudFrontDistribution.DomainName}'